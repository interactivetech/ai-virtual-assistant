# Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

Component:
  app-version: 0.0.1
  description: default description
  helmUrlLocationPath: https://helm.ngc.nvidia.com/myorg/myteam/charts
  name: ingest-client
  version: 0.0.1
affinity: {}
applicationSpecs:
  ingest-client-deployment:
    apptype: stateless
    containers:
      ingest-client-container:
        command:
        - uvicorn
        - proxy_server:app
        - --port
        - '9001'
        - --host
        - 0.0.0.0
        image:
          repository: nvcr.io/nvidia/blueprint/aiva-customer-service-ingest-client
          tag: "1.1.0"
        ports:
        - containerPort: 9001
          name: http
    initContainers:
    - command:
      - /bin/bash
      - -c
      - "until curl -sf http://$egress.chain-server-structured.address:$egress.chain-server-structured.port/health\
        \  && curl -sf http://$egress.chain-server-canonical.address:$egress.chain-server-canonical.port/health\
        \ ; do\n  echo \"Waiting for all APIs to be healthy...\"\n  sleep 10\ndone\n\
        echo \"Grace time for all services to be ready after health check passes..\"\
        \nsleep 30\n"
      image: nvcr.io/nvidia/blueprint/aiva-customer-service-ingest-client:1.1.0
      imagePullPolicy: IfNotPresent
      name: init-check
    - args:
      - import_csv_to_sql.py
      - --host
      - $egress.postgres.address
      - --port
      - $egress.postgres.port
      command:
      - python3
      image: nvcr.io/nvidia/blueprint/aiva-customer-service-ingest-client:1.1.0
      imagePullPolicy: IfNotPresent
      name: ingest-csv-to-postgres
    - args:
      - ingest_doc.py
      - --host
      - $egress.chain-server-canonical.address
      - --port
      - $egress.chain-server-canonical.port
      command:
      - python3
      image: nvcr.io/nvidia/blueprint/aiva-customer-service-ingest-client:1.1.0
      imagePullPolicy: IfNotPresent
      name: ingest-pdf-to-canonical
    services:
      ingest-client-service:
        # externalTrafficPolicy: Local
        ports:
        - name: http-api
          # nodePort: 30091
          port: 9001
          targetPort: 9001
        # type: NodePort
defaultVolumeMounts:
- mountPath: /opt/workload-config
  name: workload-cm-volume
- mountPath: /opt/configs
  name: configs-volume
- mountPath: /opt/scripts
  name: scripts-cm-volume
defaultVolumes:
- configMap:
    name: ingest-client-workload-cm
  name: workload-cm-volume
- configMap:
    name: ingest-client-configs-cm
  name: configs-volume
- configMap:
    name: ingest-client-scripts-cm
  name: scripts-cm-volume
egress:
  chain-server-canonical:
    address: <PLACEHOLDER>
    port: 0
  chain-server-structured:
    address: <PLACEHOLDER>
    port: 0
  postgres:
    address: <PLACEHOLDER>
    port: 0
externalFiles: []
image:
  pullPolicy: IfNotPresent
# imagePullSecrets:
# - name: ngc-docker-reg-secret
ingress:
  enabled: false
metrics: {}
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources:
  limits:
    cpu: "2"
    memory: 30Gi
  requests:
    cpu: "2"
    memory: 30Gi
securityContext: {}
storageClaims: {}
tolerations: []
workloadSpecs:
  dummy: {}



configs:
  config.yaml:
    SampleConfig:
      sampleValue: 0

